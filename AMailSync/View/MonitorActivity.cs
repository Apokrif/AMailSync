///////////////////////////////////////////////////////////
//  ServiceMonitorActivity.cs
//  Implementation of the Class DemoActivity
//  Generated by Enterprise Architect
//  Created on:      14-Aug-2016 7:34:51 PM
//  Original author: Apocrypha
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Android.App;
using Android.Content;
using Android.OS;
using Android.Widget;

namespace AMailSync
{
    /// <summary>
    /// ServiceMonitor Activity
    /// </summary>
    [Activity(Label = "MonitorActivity")]
    public class
        MonitorActivity : Activity
    {
        public class
            ServiceConnection : Java.Lang.Object, IServiceConnection
        {
            private MonitorActivity activity;
            private TimeServiceBinder binder;

            public ServiceConnection()
            {
            }

            ~ServiceConnection()
            {
            }

            /// 
            /// <param name="activity"></param>
            public ServiceConnection(MonitorActivity activity)
            {
            }

            public TimeServiceBinder Binder { get; }

            /// 
            /// <param name="name"></param>
            /// <param name="service"></param>
            public void OnServiceConnected(ComponentName name, IBinder service)
            {
            }

            /// 
            /// <param name="name"></param>
            public void OnServiceDisconnected(ComponentName name)
            {
            }
        } //ServiceConnection

        private TimeServiceBinder binder;

        /// <summary>
        /// com.xamarin.DemoService
        /// </summary>
        private static readonly string serviceName = "AMailSync.TimeService";

        private MonitorActivity.ServiceConnection connection;
        private bool isBound = false;
        private bool isConfigurationChange = false;

        //public MonitorActivity() {
        //}

        //~MonitorActivity()
       ///{
      //  }

        private void CheckBound()
        {
        }

        private void InitializeContetnt()
        {
            EditText editText = FindViewById<EditText>(Resource.Id.editText1);
            editText.Text = "Hi";
            Button button = FindViewById<Button>(Resource.Id.buttonCall);
            button.Click += delegate
            {
                //StartService();
            };
        }

        #region Activity LifeCycle
        ///
        /// <param name="bundle"></param>
        protected override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);

            SetContentView(Resource.Layout.Monitor);
            InitializeContetnt();
        }

        protected override void OnDestroy()
        {
            base.OnDestroy();
        }

        /// <summary>
        /// return the service connection if there is a configuration change
        /// </summary>
        public override Java.Lang.Object OnRetainNonConfigurationInstance()
        {
            return null;
        }

        /// <summary>
        /// BindServiceByIntent using connection
        /// </summary>
        protected override void OnStart()
        {
            base.OnStart();
        }

        #endregion

        private void CallTimeService()
        {
            RunOnUiThread(() =>
            {
                var text = binder.GetTimeService().Time();
                Console.WriteLine($"{text} returned from Sole Service");
            });
        }
    }
} //AMailSync